# This code is part of Qiskit.
#
# (C) Copyright IBM 2018, 2020.
#
# This code is licensed under the Apache License, Version 2.0. You may
# obtain a copy of this license in the LICENSE.txt file in the root directory
# of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.
#
# Any modifications or derivative works of this code must retain this
# copyright notice, and modified files need to carry a notice indicating
# that they have been altered from the originals.

notifications:
  email: false

cache:
  pip: true
  directories:
    - .stestr
os: linux
dist: xenial

language: python
python: 3.7

env:
  global:
    - DEPENDENCY_BRANCH=$(if [[ "$TRAVIS_BRANCH" == stable* ]]; then echo "stable"; else echo "master"; fi)
    - INIT_FILE="$TRAVIS_BUILD_DIR/qiskit/__init__.py"

stage_dependencies: &stage_dependencies
  before_install:
    - |
      if [ -f $INIT_FILE ]; then
        # stops travis if __init__.py exists under qiskit
        echo "File '$INIT_FILE' found. It should not exist, since this repo extends qiskit namespace.";
        travis_terminate 1;
      fi
    - |
      if [ "$INSTALL_PSI4" == "yes" ]; then
        # Download and install miniconda psi4
        wget http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.3.2-py37-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        source "$HOME/miniconda/etc/profile.d/conda.sh"
        conda activate
      fi
    - pip install -U 'pip<20.0.0'
    - pip install -U setuptools wheel
    - |
      if [ "$DEPENDENCY_BRANCH" == "master" ]; then
        # Download github Terra
        wget https://codeload.github.com/Qiskit/qiskit-terra/zip/$DEPENDENCY_BRANCH -O /tmp/qiskit-terra.zip
        unzip /tmp/qiskit-terra.zip -d /tmp/
        # Install local Qiskit Terra
        pip install -e /tmp/qiskit-terra-$DEPENDENCY_BRANCH --progress-bar off
        # Download github Ignis
        wget https://codeload.github.com/Qiskit/qiskit-ignis/zip/$DEPENDENCY_BRANCH -O /tmp/qiskit-ignis.zip
        unzip /tmp/qiskit-ignis.zip -d /tmp/
        # Install local Qiskit Ignis
        pip install -e /tmp/qiskit-ignis-$DEPENDENCY_BRANCH --progress-bar off
        # Download github IBMQ Provider
        wget https://codeload.github.com/Qiskit/qiskit-ibmq-provider/zip/$DEPENDENCY_BRANCH -O /tmp/qiskit-ibmq-provider.zip
        unzip /tmp/qiskit-ibmq-provider.zip -d /tmp/
        # Install local Qiskit IBMQ Provider
        pip install -e /tmp/qiskit-ibmq-provider-$DEPENDENCY_BRANCH --progress-bar off
        # install Qiskit Aer build dependencies
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get -y update
        sudo apt-get -y install g++-7
        sudo apt-get -y install libopenblas-dev
        # Download github Qiskit Aer
        wget https://codeload.github.com/Qiskit/qiskit-aer/zip/$DEPENDENCY_BRANCH -O /tmp/qiskit-aer.zip
        unzip /tmp/qiskit-aer.zip -d /tmp/
        # Install Qiskit Aer requirements.
        pip install -U -r /tmp/qiskit-aer-$DEPENDENCY_BRANCH/requirements-dev.txt --progress-bar off
        # build Qiskit Aer
        cd /tmp/qiskit-aer-$DEPENDENCY_BRANCH
        python setup.py bdist_wheel -- -DCMAKE_CXX_COMPILER=g++-7 -- -j4
        pip install dist/qiskit_aer*whl
        # back to current repo directory
        cd $TRAVIS_BUILD_DIR
      fi
    - |
      if [ ! "$(ls -A .stestr)" ]; then
          rm -rf .stestr
      fi
    # install Aqua and Aqua dev. requirements
    - pip install -e $TRAVIS_BUILD_DIR --progress-bar off
    - pip install -U -c constraints.txt -r requirements-dev.txt --progress-bar off
    - |
      if [ "$DEPENDENCY_BRANCH" != "master" ]; then
        pip install qiskit-ibmq-provider
      fi

stage_test_aqua: &stage_test_aqua
  <<: *stage_dependencies
  install:
    - |
      cat > selection.txt <<EOF
      test.aqua.operators.test_tpb_grouped_weigted_pauli_operator
      test.aqua.operators.test_weighted_pauli_operator
      test.aqua.test_custom_circuit_oracle
      test.aqua.test_entangler_map
      test.aqua.test_eoh
      test.aqua.test_exact_eigen_solver
      test.aqua.test_exact_ls_solver
      test.aqua.test_fixed_value_comparator
      test.aqua.test_hhl
      test.aqua.test_initial_state_custom
      test.aqua.test_initial_state_zero
      test.aqua.test_input_parser
      test.aqua.test_iqpe
      test.aqua.test_logical_expression_oracle
      test.aqua.test_lookup_rotation
      test.aqua.test_mct
      test.aqua.test_mcu1
      test.aqua.test_measure_error_mitigation
      test.aqua.test_nlopt_optimizers
      test.aqua.test_optimizers
      test.aqua.test_qgan
      test.aqua.test_qpe
      test.aqua.test_qsvm
      test.aqua.test_rmg
      test.aqua.test_ry
      test.aqua.test_shor
      test.aqua.test_simon
      EOF

jobs:
  include:
    - stage: Checks and Tests
      <<: *stage_dependencies
      name: "Spell, Style, Lint, Docs check"
      if: tag IS blank
      install:
        # install spell check libraries
        - sudo apt-get -y install python3-enchant
        - sudo apt-get -y install hunspell-en-us
        - pip install pyenchant
      script: make -k all_check SPHINXOPTS=-W
    - name: "Test Aqua 1 Python 3.7"
      <<: *stage_test_aqua
      if: tag IS blank
      workspaces:
        create:
          name: aqua1
          paths: aqua1.dat
      before_script:
        - export PYTHON="coverage run --source qiskit/aqua,qiskit/chemistry,qiskit/finance,qiskit/ml,qiskit/optimization --omit */gauopen/* --parallel-mode"
      script: stestr --test-path test/aqua run --blacklist-file selection.txt && coverage combine && mv .coverage aqua1.dat
    - name: "Test Aqua 1 Python 3.8"
      <<: *stage_test_aqua
      if: tag IS blank
      python: 3.8
      script: stestr --test-path test/aqua run --blacklist-file selection.txt
    - name: "Test Aqua 2 Python 3.7"
      <<: *stage_test_aqua
      if: tag IS blank
      workspaces:
        create:
          name: aqua2
          paths: aqua2.dat
      before_script:
        - export PYTHON="coverage run --source qiskit/aqua,qiskit/chemistry,qiskit/finance,qiskit/ml,qiskit/optimization --omit */gauopen/* --parallel-mode"
      script: stestr --test-path test/aqua run --whitelist-file selection.txt && coverage combine && mv .coverage aqua2.dat
    - name: "Test Aqua 2 Python 3.8"
      <<: *stage_test_aqua
      if: tag IS blank
      python: 3.8
      script: stestr --test-path test/aqua run --whitelist-file selection.txt
    - name: "Test Chemistry Python 3.7"
      <<: *stage_dependencies
      if: tag IS blank
      env:
        - INSTALL_PSI4=yes
        - OPENBLAS_NUM_THREADS=1
      workspaces:
        create:
          name: chemistry
          paths: chemistry.dat
      install:
        # install gaussian dependency libgfortran 5
        - sudo apt-get -y update
        - sudo apt-get -y install libgfortran5
        # download PyQuante master and unzip it
        - wget https://codeload.github.com/rpmuller/pyquante2/zip/master -O /tmp/pyquante2.zip
        - unzip /tmp/pyquante2.zip -d /tmp/
        # Install local PyQuante
        - pip install -e /tmp/pyquante2-master --progress-bar off
      before_script:
        - export PYTHON="coverage run --source qiskit/aqua,qiskit/chemistry,qiskit/finance,qiskit/ml,qiskit/optimization --omit */gauopen/* --parallel-mode"
      script: stestr --test-path test/chemistry run && coverage combine && mv .coverage chemistry.dat
    - name: "Test Chemistry Python 3.8"
      <<: *stage_dependencies
      if: tag IS blank
      python: 3.8
      env: OPENBLAS_NUM_THREADS=1
      install:
        # install gaussian dependency libgfortran 5
        - sudo apt-get -y update
        - sudo apt-get -y install libgfortran5
        # download PyQuante master and unzip it
        - wget https://codeload.github.com/rpmuller/pyquante2/zip/master -O /tmp/pyquante2.zip
        - unzip /tmp/pyquante2.zip -d /tmp/
        # Install local PyQuante
        - pip install -e /tmp/pyquante2-master --progress-bar off
      script: stestr --test-path test/chemistry run
    - name: "Test Finance Python 3.7"
      <<: *stage_dependencies
      if: tag IS blank
      workspaces:
        create:
          name: finance
          paths: finance.dat
      before_script:
        - export PYTHON="coverage run --source qiskit/aqua,qiskit/chemistry,qiskit/finance,qiskit/ml,qiskit/optimization --omit */gauopen/* --parallel-mode"
      script: stestr --test-path test/finance run && coverage combine && mv .coverage finance.dat
    - name: "Test Finance Python 3.8"
      <<: *stage_dependencies
      if: tag IS blank
      python: 3.8
      script: stestr --test-path test/finance run
    - name: "Test Machine Learning Python 3.7"
      <<: *stage_dependencies
      if: tag IS blank
      workspaces:
        create:
          name: ml
          paths: ml.dat
      before_script:
        - export PYTHON="coverage run --source qiskit/aqua,qiskit/chemistry,qiskit/finance,qiskit/ml,qiskit/optimization --omit */gauopen/* --parallel-mode"
      script: stestr --test-path test/ml run && coverage combine && mv .coverage ml.dat
    - name: "Test Machine Learning Python 3.8"
      <<: *stage_dependencies
      if: tag IS blank
      python: 3.8
      script: stestr --test-path test/ml run
    - name: "Test Optimization Python 3.7"
      <<: *stage_dependencies
      if: tag IS blank
      workspaces:
        create:
          name: optimization
          paths: optimization.dat
      before_script:
        - export PYTHON="coverage run --source qiskit/aqua,qiskit/chemistry,qiskit/finance,qiskit/ml,qiskit/optimization --omit */gauopen/* --parallel-mode"
      script: stestr --test-path test/optimization run && coverage combine && mv .coverage optimization.dat
    - name: "Test Optimization Python 3.8"
      <<: *stage_dependencies
      if: tag IS blank
      python: 3.8
      script: stestr --test-path test/optimization run
    - stage: Coverage
      name: "Combine all coverages and upload to Coveralls"
      if: tag IS blank
      workspaces:
        use:
          - aqua1
          - aqua2
          - chemistry
          - finance
          - ml
          - optimization
      install:
        - pip install -U coverage coveralls diff-cover
      script:
        - coverage combine aqua1.dat aqua2.dat chemistry.dat finance.dat ml.dat optimization.dat
        - coveralls || true
        - coverage xml
        - diff-cover --compare-branch master coverage.xml || true
    - stage: Deploy
      <<: *stage_dependencies
      name: "Deploy to Pypi"
      if: tag IS present
      python: 3.6
      env:
        - TWINE_USERNAME=qiskit
      install: pip install -U twine
      script:
        - python3 setup.py sdist bdist_wheel
        - twine upload dist/qiskit*
